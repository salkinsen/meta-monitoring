---
# Source: metricbeat/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: metricbeat-metricbeat
  annotations:
  labels:
    app: "metricbeat-metricbeat"
    chart: "metricbeat-7.13.0"
    heritage: "Helm"
    release: "metricbeat"
---
# Source: metricbeat/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-metricbeat-daemonset-config
  labels:
    app: "metricbeat-metricbeat"
    chart: "metricbeat-7.13.0"
    heritage: "Helm"
    release: "metricbeat"
data:
  metricbeat.yml: |
    # setup.dashboards.enabled: true
    # setup.kibana.host: "http://kibana-metrics:5601"
    metricbeat.modules:
    # - module: kubernetes
      # metricsets:
      #   - container
      #   - node
      #   - pod
      #   - volume
      #   - system
      # period: 1000000m
      # host: "${NODE_NAME}"
      # hosts: ["https://${NODE_NAME}:10250"]
      # bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      # ssl.verification_mode: "none"
      # If using Red Hat OpenShift remove ssl.verification_mode entry and
      # uncomment these settings:
      #ssl.certificate_authorities:
        #- /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
      # processors:
      # - add_kubernetes_metadata: ~
    # - module: kubernetes
    #   enabled: true
    #   metricsets:
    #     - event
    - module: system
      period: 100000m
      metricsets:
        - cpu
    #     - load
    #     - memory
    #     - network
        # - process
        # - process_summary
      # processes: ['.*']
      # process.include_top_n:
      #   by_cpu: 5
      #   by_memory: 5
    # - module: system
    #   period: 1m
    #   metricsets:
    #     - filesystem
    #     - fsstat
    #   processors:
    #   - drop_event.when.regexp:
    #       system.filesystem.mount_point: '^/(sys|cgroup|proc|dev|etc|host|lib)($|/)'
    output.elasticsearch:
      hosts: '${ELASTICSEARCH_HOSTS:elasticsearch-monitoring-master:9200}'
---
# # Source: metricbeat/templates/configmap.yaml
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: metricbeat-metricbeat-deployment-config
#   labels:
#     app: "metricbeat-metricbeat"
#     chart: "metricbeat-7.13.0"
#     heritage: "Helm"
#     release: "metricbeat"
# data:
#   metricbeat.yml: |
#     metricbeat.modules:
#     - module: kubernetes
#       enabled: true
#       metricsets:
#         - state_node
#         - state_deployment
#         - state_replicaset
#         - state_pod
#         - state_container
#       period: 10s
#       hosts: ["${KUBE_STATE_METRICS_HOSTS}"]
#     output.elasticsearch:
#       hosts: '${ELASTICSEARCH_HOSTS:elasticsearch-monitoring-master:9200}'
# ---
# Source: metricbeat/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: metricbeat-metricbeat-cluster-role
  labels:
    app: "metricbeat-metricbeat"
    chart: "metricbeat-7.13.0"
    heritage: "Helm"
    release: "metricbeat"
rules: 
  - apiGroups:
    - ""
    resources:
    - nodes
    - namespaces
    - events
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - replicasets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets
    - deployments
    - replicasets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/stats
    - nodes/metrics
    verbs:
    - get
---
# Source: metricbeat/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: metricbeat-metricbeat-cluster-role-binding
  labels:
    app: "metricbeat-metricbeat"
    chart: "metricbeat-7.13.0"
    heritage: "Helm"
    release: "metricbeat"
roleRef:
  kind: ClusterRole
  name: metricbeat-metricbeat-cluster-role
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: metricbeat-metricbeat
  namespace: default
---
# Source: metricbeat/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: metricbeat-metricbeat
  labels:
    app: "metricbeat-metricbeat"
    chart: "metricbeat-7.13.0"
    heritage: "Helm"
    release: "metricbeat"
spec:
  selector:
    matchLabels:
      app: "metricbeat-metricbeat"
      release: "metricbeat"
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        
        configChecksum: 602d9a7454d28c365352a9d4abdad368abd549bc16342ab0eacd4ebe623218f
      name: "metricbeat-metricbeat"
      labels:
        app: "metricbeat-metricbeat"
        chart: "metricbeat-7.13.0"
        heritage: "Helm"
        release: "metricbeat"
    spec:
      affinity: 
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: layer
                operator: NotIn
                values:
                - meta-monitoring
                - observability
      nodeSelector: 
        {}
      tolerations: 
        []
      serviceAccountName: metricbeat-metricbeat
      terminationGracePeriodSeconds: 30
      volumes:
      - name: metricbeat-config
        configMap:
          defaultMode: 0600
          name: metricbeat-metricbeat-daemonset-config
      - name: data
        hostPath:
          path: /var/lib/metricbeat-metricbeat-default-data
          type: DirectoryOrCreate
      - name: varrundockersock
        hostPath:
          path: /var/run/docker.sock
      - name: proc
        hostPath:
          path: /proc
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
      containers:
      - name: "metricbeat"
        image: "docker.elastic.co/beats/metricbeat:7.13.0"
        imagePullPolicy: "IfNotPresent"
        args:
        - "-e"
        - "-E"
        - "http.enabled=true"
        - "--system.hostfs=/hostfs"
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - |
              #!/usr/bin/env bash -e
              curl --fail 127.0.0.1:5066
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - |
              #!/usr/bin/env bash -e
              metricbeat test output
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
        resources: 
          limits:
            cpu: 1000m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        envFrom: 
          []
        securityContext: 
          privileged: false
          runAsUser: 0
        volumeMounts:
        - name: metricbeat-config
          mountPath: /usr/share/metricbeat/metricbeat.yml
          readOnly: true
          subPath: metricbeat.yml
        - name: data
          mountPath: /usr/share/metricbeat/data
        # Necessary when using autodiscovery; avoid mounting it otherwise
        # See: https://www.elastic.co/guide/en/beats/metricbeat/7.11/configuration-autodiscover.html
        - name: varrundockersock
          mountPath: /var/run/docker.sock
          readOnly: true
        - name: proc
          mountPath: /hostfs/proc
          readOnly: true
        - name: cgroup
          mountPath: /hostfs/sys/fs/cgroup
          readOnly: true
# ---
# # Source: metricbeat/templates/deployment.yaml
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: 'metricbeat-metricbeat-metrics'
#   labels:
#     app: 'metricbeat-metricbeat-metrics'
#     chart: 'metricbeat-7.13.0'
#     heritage: 'Helm'
#     release: 'metricbeat'
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: 'metricbeat-metricbeat-metrics'
#       release: 'metricbeat'
#   template:
#     metadata:
#       annotations:
        
#         configChecksum: 602d9a7454d28c365352a9d4abdad368abd549bc16342ab0eacd4ebe623218f
#       labels:
#         app: 'metricbeat-metricbeat-metrics'
#         chart: 'metricbeat-7.13.0'
#         release: 'metricbeat'
#     spec:
#       affinity: 
#         nodeAffinity:
#           requiredDuringSchedulingIgnoredDuringExecution:
#             nodeSelectorTerms:
#             - matchExpressions:
#               - key: layer
#                 operator: NotIn
#                 values:
#                 - meta-monitoring
#       nodeSelector: 
#         {}
#       tolerations: 
#         []
#       serviceAccountName: metricbeat-metricbeat
#       terminationGracePeriodSeconds: 30
#       volumes:
#       - name: metricbeat-config
#         configMap:
#           defaultMode: 0600
#           name: metricbeat-metricbeat-deployment-config
#       containers:
#       - name: "metricbeat"
#         image: "docker.elastic.co/beats/metricbeat:7.13.0"
#         imagePullPolicy: "IfNotPresent"
#         args:
#           - "-e"
#           - "-E"
#           - "http.enabled=true"
#         livenessProbe:
#           exec:
#             command:
#             - sh
#             - -c
#             - |
#               #!/usr/bin/env bash -e
#               curl --fail 127.0.0.1:5066
#           failureThreshold: 3
#           initialDelaySeconds: 10
#           periodSeconds: 10
#           timeoutSeconds: 5
#         readinessProbe:
#           exec:
#             command:
#             - sh
#             - -c
#             - |
#               #!/usr/bin/env bash -e
#               metricbeat test output
#           failureThreshold: 3
#           initialDelaySeconds: 10
#           periodSeconds: 10
#           timeoutSeconds: 5
#         resources: 
#           limits:
#             cpu: 1000m
#             memory: 200Mi
#           requests:
#             cpu: 100m
#             memory: 100Mi
#         env:
#         - name: POD_NAMESPACE
#           valueFrom:
#             fieldRef:
#               fieldPath: metadata.namespace
#         - name: KUBE_STATE_METRICS_HOSTS
#           value: kube-state-metrics:8080
#         envFrom: 
#           []
#         securityContext: 
#           privileged: false
#           runAsUser: 0
#         volumeMounts:
#         - name: metricbeat-config
#           mountPath: /usr/share/metricbeat/metricbeat.yml
#           readOnly: true
#           subPath: metricbeat.yml
# ---
# Source: metricbeat/templates/deployment.yaml
# Deploy singleton instance in the whole cluster for some unique data sources, like kube-state-metrics
